import { redisClusterCommand } from "extras://hiredis-cluster";

function rate($namespace, $entry, $count, $interval) {
    if ($count === 0) {
        $response = redisClusterCommand("GET", "$namespace:$entry:count");
        if ($response["error"]) throw Exception($response["error"]);
        return number($response["reply"]);
    }

    $response = redisClusterCommand("GET", "$namespace:$entry:time");
    if ($response["error"]) throw Exception($response["error"]);
    $time = number($response["reply"]);
    
    if (time() - $time >= $interval) {
        $response = redisClusterCommand("SET", "$namespace:$entry:time", string(time()), "EX", string($interval));
        if ($response["error"]) throw Exception($response["error"]);
        $response = redisClusterCommand("SET", "$namespace:$entry:count", "0", "EX", string($interval));
        if ($response["error"]) throw Exception($response["error"]);
    } else {
        $response = redisClusterCommand("GET", "$namespace:$entry:count");
        if ($response["error"]) throw Exception($response["error"]);
        $current = number($response["reply"]);
        if ($current >= $count) {
            return false;
        }
    }

    $response = redisClusterCommand("INCR", "$namespace:$entry:count");
    if ($response["error"]) throw Exception($response["error"]);
    return true;
}

function rate_sliding_window($namespace, $entry, $count, $interval) {
    $time = time();

    $currentWindow = floor($time / $interval);
    $response = redisClusterCommand("GET", "$namespace:$entry:$currentWindow");
    if ($response["error"]) throw Exception($response["error"]);
    $currentWindowCount = number($response["reply"]);

    if ($count !== 0 and $currentWindowCount === 0) {
        $response = redisClusterCommand("SET", "$namespace:$entry:$currentWindow", "0", "EX", string($interval * 2));
        if ($response["error"]) throw Exception($response["error"]);
    }

    if ($count and $currentWindowCount >= $count) {
        return false;
    }

    $lastWindow = floor(($time - $interval) / $interval);
    $response = redisClusterCommand("GET", "$namespace:$entry:$lastWindow");
    if ($response["error"]) throw Exception($response["error"]);
    $lastWindowCount = number($response["reply"]);

    $elapsedTimePercentage = ($time % $interval) / $interval;
    $combinedCount = floor($lastWindowCount * (1 - $elapsedTimePercentage)) + $currentWindowCount;

    if ($count === 0) {
        return $combinedCount;
    }

    if ($combinedCount >= $count) {
        return false;
    }

    $response = redisClusterCommand("INCR", "$namespace:$entry:$currentWindow");
    if ($response["error"]) throw Exception($response["error"]);
    return true;
}
