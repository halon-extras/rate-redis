import { Redis } from "extras://redis";

function rate_fixed_window($namespace, $entry, $count, $interval, $options = []) {
    if ($options["profile"])
        $redis = Redis($options["profile"]);
    else
        $redis = Redis();

    if ($count === 0) {
        $response = $redis->command("GET", "$namespace:$entry:count");
        return number($response);
    }

    $response = $redis->command("GET", "$namespace:$entry:time");
    $time = number($response);
    
    if (time() - $time >= $interval) {
        $redis->command("SET", "$namespace:$entry:time", string(time()), "EX", string($interval));
        $redis->command("SET", "$namespace:$entry:count", "0", "EX", string($interval));
    } else {
        $response = $redis->command("GET", "$namespace:$entry:count");
        $current = number($response);
        if ($current >= $count) {
            return false;
        }
    }

    $redis->command("INCR", "$namespace:$entry:count");
    return true;
}

function rate_sliding_window($namespace, $entry, $count, $interval, $options = []) {
    if ($options["profile"])
        $redis = Redis($options["profile"]);
    else
        $redis = Redis();

    $time = time();

    $currentWindow = floor($time / $interval);
    $response = $redis->command("GET", "$namespace:$entry:$currentWindow");
    $currentWindowCount = number($response);

    if ($count !== 0 and $currentWindowCount === 0) {
        $redis->command("SET", "$namespace:$entry:$currentWindow", "0", "EX", string($interval * 2));
    }

    if ($count and $currentWindowCount >= $count) {
        return false;
    }

    $lastWindow = floor(($time - $interval) / $interval);
    $response = $redis->command("GET", "$namespace:$entry:$lastWindow");
    $lastWindowCount = number($response);

    $elapsedTimePercentage = ($time % $interval) / $interval;
    $combinedCount = floor($lastWindowCount * (1 - $elapsedTimePercentage)) + $currentWindowCount;

    if ($count === 0) {
        return $combinedCount;
    }

    if ($combinedCount >= $count) {
        return false;
    }

    $redis->command("INCR", "$namespace:$entry:$currentWindow");
    return true;
}
